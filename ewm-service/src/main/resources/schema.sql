create table if not exists users (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(250) NOT NULL,
  email varchar(254) NOT NULL,
  CONSTRAINT uq_user_email UNIQUE (email)
);

create table if not exists categories (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(50) NOT NULL,
  CONSTRAINT uq_category_name UNIQUE (name)
);

create table if not exists locations (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  lat real NOT NULL,
  lon real NOT NULL
);

create table if not exists events (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation varchar(2000) NOT NULL,
    category_id bigint NOT NULL,
    created_on timestamp WITHOUT TIME ZONE NOT NULL,
    published_on timestamp WITHOUT TIME ZONE,
    description varchar(7000) NOT NULL,
    event_date timestamp WITHOUT TIME ZONE NOT NULL,
    user_id bigint NOT NULL,
    location_id bigint NOT NULL,
    paid boolean NOT NULL,
    participant_limit int NOT NULL,
    request_moderation boolean NOT NULL,
    state varchar(10) NOT NULL,
    title varchar(120) NOT NULL,
    CONSTRAINT fk_event_user FOREIGN KEY(user_id) REFERENCES users(id),
    CONSTRAINT fk_event_category FOREIGN KEY(category_id) REFERENCES categories(id),
    CONSTRAINT fk_event_location FOREIGN KEY(location_id) REFERENCES locations(id)
);

create table if not exists participation_requests (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id bigint NOT NULL,
    event_id bigint NOT NULL,
    created timestamp WITHOUT TIME ZONE NOT NULL,
    status varchar(10) NOT NULL,
    CONSTRAINT uq_request UNIQUE (user_id, event_id),
    CONSTRAINT fk_request_user FOREIGN KEY(user_id) REFERENCES users(id),
    CONSTRAINT fk_request_event FOREIGN KEY(event_id) REFERENCES events(id)
);

create table if not exists compilations (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title varchar(50) NOT NULL,
    pinned boolean NOT NULL,
    CONSTRAINT uq_compilation_title UNIQUE (title)
);

create table if not exists compilation_event (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    compilation_id bigint NOT NULL,
    event_id bigint NOT NULL,
    CONSTRAINT fk_compilation FOREIGN KEY(compilation_id) REFERENCES compilations(id) ON DELETE CASCADE,
    CONSTRAINT fk_event FOREIGN KEY(event_id) REFERENCES events(id) ON DELETE CASCADE
);


